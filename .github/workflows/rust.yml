name: Rust CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Test
    runs-on: default
    container:
      image: rust:1.76 # Use the official Rust Docker image

    steps:
      - uses: actions/checkout@v3

      - name: Install additional dependencies
        run: |
          apt-get update
          apt-get install -y --no-install-recommends libssl-dev pkg-config

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Check formatting
        run: |
          rustup component add rustfmt
          cargo fmt --all -- --check

      - name: Run clippy
        run: |
          rustup component add clippy
          cargo clippy -- -D warnings

  coverage:
    name: Code Coverage
    runs-on: default
    container:
      image: rust:1.76

    steps:
      - uses: actions/checkout@v3

      - name: Install OpenSSL dependencies
        run: |
          apt-get update
          apt-get install -y --no-install-recommends libssl-dev pkg-config

      - name: Install cargo-tarpaulin
        run: |
          export OPENSSL_DIR=/usr/include/openssl
          export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig
          cargo install cargo-tarpaulin

      - name: Generate code coverage
        run: cargo tarpaulin --verbose --workspace --out Xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
