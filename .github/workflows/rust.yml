name: Rust CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Test
    runs-on: default

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy -- -D warnings

  coverage:
    name: Code Coverage
    runs-on: default

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install grcov
        run: cargo install grcov

      - name: Generate coverage data
        run: |
          rustup component add llvm-tools-preview
          export RUSTFLAGS="-Cinstrument-coverage"
          export LLVM_PROFILE_FILE="profile-%p-%m.profraw"
          cargo build
          cargo test
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false # Changed to false to prevent CI failure on upload error
          verbose: true
